entity,defination
函数,在Python中，函数的应用非常广泛。在前面我们已经多次接触过函数。例如，用于输出的print()函数、用于输入的input()函数及用于生成一系列整数的range()函数，这些都是Python内置的标准函数，可以直接使用。除了可以直接使用的标准函数外，Python还支持自定义函数。即通过将一段有规律的、重复的代码定义为函数，来达到一次编写、多次调用的目的。使用函数可以提高代码的重复利用率。
创建函数,创建函数也称为定义函数，可以理解为创建一个具有某种用途的工具。
调用函数,调用函数也就是执行函数。如果把创建的函数理解为创建一个具有某种用途的工具，那么调用函数就相当于使用该工具。
参数传递,在调用函数时，大多数情况下，主调函数和被调用函数之间有数据传递关系，这就是有参数的函数形式。函数参数的作用是传递数据给函数使用，函数利用接收的数据进行具体的操作处理。
形式参数,函数定义时参数列表中的参数就是形式参数。
实际参数,函数调用时传递进来的参数就是实际参数。
位置参数,位置参数也称必备参数，是必须按照正确的顺序传到函数中，即调用时的数量和位置必须和定义时是一样的。
关键字参数,关键字参数是指使用形式参数的名字来确定输入的参数值。通过该方式指定实际参数时，不再需要与形式参数的位置完全一致。只要将参数名写正确即可。这样可以避免用户需要牢记参数位置的麻烦，使得函数的调用和参数传递更加灵活方便。
参数默认值,调用函数时，如果没有指定某个参数将抛出异常，为了解决这个问题，我们可以为参数设置默认值，即在定义函数时，直接指定形式参数的默认值。这样，当没有传入参数时，则直接使用定义函数时设置的默认值。
可变参数,在Python中，还可以定义可变参数。可变参数也称不定长参数，即传入函数中的实际参数可以是任意多个。定义可变参数时，主要有两种形式：一种是*parameter，另一种是**parameter。1. *parameter，这种形式表示接收任意多个实际参数并将其放到一个元组中。2.**parameter，这种形式表示接收任意多个类似关键字参数一样显式赋值的实际参数，并将其放到一个字典中。
返回值,在Python中，可以在函数体内使用return语句为函数指定返回值，该返回值可以是任意类型，并且无论return语句出现在函数的什么位置，只要得到执行，就会直接结束函数的执行。
变量的作用域,变量的作用域是指程序代码能够访问该变量的区域，如果超出该区域，再访问时就会出现错误。在程序中，一般会根据变量的“有效范围”将变量分为“全局变量”和“局部变量”。
局部变量,局部变量是指在函数内部定义并使用的变量，它只在函数内部有效。即函数内部的名字只在函数运行时才会创建，在函数运行之前或者运行完毕之后，所有的名字就都不存在了。所以，如果在函数外部使用函数内部定义的变量，就会出现抛出NameError异常。
全局变量,与局部变量对应，全局变量为能够作用于函数内外的变量。全局变量主要有以下两种情况:（1）如果一个变量，在函数外定义，那么不仅在函数外可以访问到，在函数内也可以访问到。在函数体以外定义的变量是全局变量。（2）在函数体内定义，并且使用global关键字修饰后，该变量也就变为全局变量。在函数体外也可以访问到该变量，并且在函数体内还可以对其进行修改。
匿名函数,匿名函数是指没有名字的函数，应用在需要一个函数，但是又不想费神去命名这个函数的场合。通常情况下，这样的函数只使用一次。在Python中，使用lambda表达式创建匿名函数。
