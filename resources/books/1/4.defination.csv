entity,defination
序列,序列也称为数列，是指按照一定顺序排列的一列数，而在程序设计中，序列是一种常用的数据存储方式，几乎每一种程序设计语言都提供了类似的数据结构。
索引,序列中的每一个元素都有一个编号。
切片,切片操作是访问序列中元素的另一种方法，它可以访问一定范围内的元素。通过切片操作可以生 成一个新的序列。
序列相加,在Python中，支持两种相同类型的序列相加操作，即将两个序列进行连接，不会去除重复的元素，使用加运算符实现。
序列乘法,在Python中，使用数字n乘以一个序列会生成新的序列。新序列的内容为原来序列被重复n次的结果。
列表,由一系列按特定顺序排列的元素组成的。
遍历,遍历列表中的所有元素是常用的一种操作，在遍历的过程中可以完成查询、处理等功能。
元组,元组(tuple)是Python中另一个重要的序列结构，与列表类似，也是由一系列按特定顺序排列的元素组成，但是它是不可变序列。因此，元组也可以称为不可变的列表。在形式上，元组的所有元素都放在一对“()”中，两个相邻元素间使用“,”分隔。在内容上，可以将整数、实数、字符串、列表、元组等任何类型的内容放入到元组中，并且在同一个元组中，元素的类型可以不同，因为它们之间没有任何关系。通常情况下，元组用于保存程序中不可修改的内容。
字典,字典与列表类似，也是可变序列，不过与列表不同，它是无序的可变序列，保存的内容是以“键-值对”的形式存放的。这类似于我们的新华字典，它可以把拼音和汉字关联起来，通过音节表可以快速找到想要的汉字。其中新华字典里的音节表相当于键(key)，而对应的汉字，相当于值(value)。键是唯一的，而值可以有多个。字典在定义一个包含多个命名字段的对象时，很有用。
集合,Python中的集合同数学中的集合概念类似，也是用于保存不重复元素的。它有可变集合(set)和不可变集合(frozenset)两种。在形式上，集合的所有元素都放在一对“{}”中，两个相邻元素间使用分隔。集合最好的应用就是去掉重复元素，因为集合中的每个元素都是唯一的。
交集运算,进行交集运算时使用“&”符号。
并集运算,进行并集运算时使用“|”符号。
差集运算,进行差集运算时使用“-”符号。
对称差集运算,进行对称差集运算时使用“^”符号。